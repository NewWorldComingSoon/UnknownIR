# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

include(FetchContent)

if(ENABLE_TEST) # test_mode
	message(STATUS "Fetching googletest (release-1.12.1)...")
	FetchContent_Declare(googletest
		GIT_REPOSITORY
			"https://github.com/google/googletest"
		GIT_TAG
			release-1.12.1
	)
	FetchContent_MakeAvailable(googletest)

endif()
# Target: test-uir
set(test-uir_SOURCES
	"test-uir/main.cpp"
	"test-uir/test.bb.cpp"
	"test-uir/test.free.cpp"
	"test-uir/test.func.cpp"
	"test-uir/test.inst.cpp"
	"test-uir/test.module.cpp"
	"test-uir/test.type.cpp"
	"test-uir/test.utils.cpp"
	"test-uir/test.value.cpp"
	cmake.toml
)

add_executable(test-uir)

target_sources(test-uir PRIVATE ${test-uir_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${test-uir_SOURCES})

target_compile_features(test-uir PRIVATE
	cxx_std_20
)

target_include_directories(test-uir PRIVATE
	"../3rdparty"
	"../3rdparty/argparse/include"
	"../include"
	"googletest/googletest/include"
)

target_link_libraries(test-uir PRIVATE
	UnknownUtils
	UnknownIR
	gtest
)

set_target_properties(test-uir PROPERTIES
	MSVC_RUNTIME_LIBRARY
		"MultiThreaded$<$<CONFIG:Debug>:Debug>"
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT test-uir)
endif()

# Target: test-ufrontend
set(test-ufrontend_SOURCES
	"test-ufrontend/main.cpp"
	"test-ufrontend/test.lift.cpp"
	cmake.toml
)

add_executable(test-ufrontend)

target_sources(test-ufrontend PRIVATE ${test-ufrontend_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${test-ufrontend_SOURCES})

target_compile_features(test-ufrontend PRIVATE
	cxx_std_20
)

target_include_directories(test-ufrontend PRIVATE
	"../3rdparty"
	"../3rdparty/argparse/include"
	"../include"
	"googletest/googletest/include"
)

target_link_libraries(test-ufrontend PRIVATE
	UnknownUtils
	UnknownIR
	UnknownFrontend
	gtest
	raw_pdb
	capstone-static
)

set_target_properties(test-ufrontend PROPERTIES
	MSVC_RUNTIME_LIBRARY
		"MultiThreaded$<$<CONFIG:Debug>:Debug>"
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT test-ufrontend)
endif()

# Target: test-lief
set(test-lief_SOURCES
	"test-lief/main.cpp"
	"test-lief/test.lief.cpp"
	cmake.toml
)

add_executable(test-lief)

target_sources(test-lief PRIVATE ${test-lief_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${test-lief_SOURCES})

target_compile_features(test-lief PRIVATE
	cxx_std_20
)

target_include_directories(test-lief PRIVATE
	"../3rdparty"
	"../3rdparty/LIEF/include"
	"../include"
	"googletest/googletest/include"
)

target_link_libraries(test-lief PRIVATE
	gtest
	LIB_LIEF
)

set_target_properties(test-lief PROPERTIES
	MSVC_RUNTIME_LIBRARY
		"MultiThreaded$<$<CONFIG:Debug>:Debug>"
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT test-lief)
endif()

# Target: test-xml
set(test-xml_SOURCES
	"test-xml/main.cpp"
	"test-xml/test-xml.cpp"
	cmake.toml
)

add_executable(test-xml)

target_sources(test-xml PRIVATE ${test-xml_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${test-xml_SOURCES})

target_compile_features(test-xml PRIVATE
	cxx_std_20
)

target_include_directories(test-xml PRIVATE
	"../3rdparty"
	"../include"
	"googletest/googletest/include"
)

target_link_libraries(test-xml PRIVATE
	UnknownUtils
	gtest
)

set_target_properties(test-xml PROPERTIES
	MSVC_RUNTIME_LIBRARY
		"MultiThreaded$<$<CONFIG:Debug>:Debug>"
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT test-xml)
endif()

